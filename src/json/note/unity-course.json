{
  "title": "Learn Unity",
  "nav": [
    {
      "text": "Source"
    },
    {
      "text": "Description"
    },
    {
      "text": "Preconditions"
    },
    {
      "text": "Notes"
    },
    {
      "text": "Summary"
    }
  ],
  "sections": {
    "source": {
      "text": "Source",
      "links": [
        {
          "link": "https://youtu.be/AmGSEH7QcDg",
          "text": "Source Tutorial"
        },
        {
          "link": "https://unity.com/download",
          "text": "Unity"
        }
      ]
    },
    "desc": {
      "text": "Description",
      "desc": [
        "Always wanted to create a game.",
        ""
      ]
    },
    "precondition": {
      "text": "Preconditions",
      "list": [
        "Unity",
        "Visual Studio Community 2022"
      ]
    }
  },
  "notes": [
    {
      "text": "Notes",
      "points": [
        {
          "text": [
            "Timestamps"
          ],
          "codes": [
            {
              "format": [
                "0-20; 1. Intro",
                "20-25; 2. Create Project",
                "25-32; 3. Prepare Layout",
                "32-35.5; 4. Setup Visual Studio",
                "35.5-39.5; 5. Naming Rules",
                "39.5-41; 6. Importing Assets",
                "41-56; 7. Post Processing",
                "56-1:15; 8. Character Controller",
                "1:15-1:23 Character Visual, Rotation",
                "1:23-1:43 Animations"
              ]
            }
          ]
        },
        {
          "text": [
            "Create Project"
          ],
          "codes": [
            {
              "format": [
                "Install Unity Hub",
                "Instal Unity Editor version 2022.2.1f1 (course version)",
                "Only editor and Visual Studio Community 2022 for this",
                "Create new Project",
                "Select Unity Editor version 2022.2.1f1",
                "Installed on game ssd drive",
                "E:\\2022.2.1f1\\Editor\\Unity.exe",
                "select 3D URP template (universal render pipeline), download template",
                "Set Project Name to KitchenChaos",
                "Project folder: E:\\atari-monk\\unity-course",
                "Click New Project, editor opens",
                "remove readme assets about URP",
                "Edit->Project Settings->Graphics Tab check ig URP HighFidelity asset should be assign",
                "URP Global Settings should be set to UniversalRenderPipelineGlobalSettings",
                "On Quality tab HighFidelity should be seleted, trash/delete preforment and balanced",
                "Go to main assets tab and delete preforment and balanced assets (4)"
              ]
            }
          ]
        },
        {
          "text": [
            "Prepare Layout"
          ],
          "codes": [
            {
              "format": [
                "Inspector on the right",
                "put Hierarchy down on left side",
                "next Project and Console",
                "Scene and Game view in the center",
                "go to Project, 3 dots menu, select one column layout",
                "go to Console, 3 dots menu, select Log Entry-> one line, Clear->Clear on play, untoogle collapse, toogle pause on error",
                "on Game view, Free Aspect -> Full HD, turn on VSync (limit fps), Play Unfocused, scale should be pushed max to the left",
                "on Scene view, use Pivot (not center), Global (rotation), grid on, snaping off",
                "on the right, draw mode on Shaded, 2D off, ligh on, audio off, special effects on (refresh off)",
                "hidden objs on, camera defaults, gizmos defaults",
                "go to layouts (top right), save as KitchenChaos"
              ]
            }
          ]
        },
        {
          "text": [
            "Setup Visual Studio"
          ],
          "codes": [
            {
              "format": [
                "Open proj in Unity Editor, Window->Package Manager, Packeges->Unity Registry",
                "Find editor of liking, Visual Studio Editor, install (upd btn)",
                "Edit->Preferences, External Tools, External Script Editor, select VS, untick checkboxes (this proj doesnt need it)",
                "Go to Assets->Open C# Project, VS opens up",
                "In VS, Extensions->Manage Extensions, Viasfora, install",
                "Go to Tools->Options, Viasfora, Enable Dev Margin false, Rainbow Braces is one of the features of this extnsion.",
                "Go to Unity Editor, Project, +, add c# script, name it Testing, wait to compile, click to open in VS",
                "Go to Tools->Options, C#->Code Style->Formating, he unchecked to make braces not start in new lines"
              ]
            }
          ]
        },
        {
          "text": [
            "Naming Rules"
          ],
          "codes": [
            {
              "format": [
                "{0}",
                "{1}",
                "{2}",
                "{3}",
                "His rules:",
                "Functions Names - PascalCase",
                "Function params - camelCase",
                "Fields - camelCase",
                "Properties - PascalCase",
                "Constants = UpperCase SnakeCase",
                "Events - PascalCase",
                "Proper naming with no abbreviations"
              ],
              "params": [
                {
                  "name": "PascalCase",
                  "desc": "Starts with capital and every word is capitalized"
                },
                {
                  "name": "camelCase",
                  "desc": "Starts with lowercase and every word is capitalized (camel hump)"
                },
                {
                  "name": "snake_case",
                  "desc": "underscore beetween words"
                },
                {
                  "name": "github-repo-case",
                  "desc": "- beetween words"
                }
              ]
            }
          ]
        },
        {
          "text": [
            "Importing Assets"
          ],
          "codes": [
            {
              "format": [
                "account on codeMonkey page, downloaded assets",
                "drag&drop assets package on Project window, select All, import",
                ""
              ]
            }
          ]
        },
        {
          "text": [
            "Post Processing"
          ],
          "codes": [
            {
              "format": [
                "normally added later, this is for yt",
                "rename Scene->SampleScene to GameScene",
                "click GameScene, click GlobalVolume, select SampleSceneProfile, delete it ",
                "click new to create ne Volume Profile",
                "on Hierarchy, add, 3d object, plane, name it Floor",
                "select plane, go to transform, position on 0, scale 5 5 5",
                "enable constrain proportions",
                "materials, circle selector, choose floor from assets",
                "Project, Assets->PrefabsVisuals, select PlayerVisual, drag&drop on main screen, on plain",
                "also for ClearCounter, CuttingCounter, tomato, cabbage",
                "scene control: mouse 3 (wheel) - pan camera, rotate cam - right mouse button, rotate around point - left alt, left mouse btn, zoom - left alt, right mouse btn",
                "rotate around obj - select obj, f, left alt, left mouse btn",
                "hold right mouse btn, use WSAD to move, shift to move faster, mose wheel to mod speed",
                "possition camera:",
                "position cam in scene, select main cam in Herarchy, ctrl+shift+f or menu->GameObject->Align With View, switch to Game view",
                "select Global Volume, add override -> Post Processing -> Tonemapping, check Mode, Neutral",
                "if no diffrence, check if Main Cam->Rendering->PostProcessing is enabled",
                "also enabled in URP-HighFidelity-Renderer",
                "Global Volume -> add override -> Post Processing -> Color Adjustments, Saturation on 20, contrast on 20",
                "add stove counter asset",
                "find stoveOnVisual in it, enable it visible",
                "Global Volume -> add override -> Post Processing -> Bloom",
                "enable treshold and intensity, set 0.95 and 1",
                "stove should glow, for this URP HDR must be on",
                "URP renderer must have Post Process Data atached (toogle to reset if not)",
                "Global Volume -> add override -> Post Processing -> Vignette",
                "Intensity .25, Smoothness .4",
                "select URP, Anti Aliasing (MSAA) 8x (see diffrance in game view), on camera select no anti aliasing",
                "URP renderer, add Screen Space Ambient Occlusion, adds shadows where object intersects, it looks better",
                "select cam, position it, x 0 y 21.5 z -21.3, rot x 46 y 0 z 0",
                "go to URP renderer, set ambient oclusion",
                "intensity 4, radius .3, direct lighting strength 1",
                "window->Rendering->Lighting, anchor it next to inspector",
                "leave defaults, scene->assets none, environment default",
                "in clobal volume, u can clone profile and make other post processing look with diffrent settings",
                "delete visuals exept floor"
              ]
            }
          ]
        },
        {
          "text": [
            "Character Controller"
          ],
          "codes": [
            {
              "format": [
                "In Hierarchy, create empty game object, name it Player",
                "put it on 0,0,0; inside of it create a capsule visual;",
                "scale it to .7,1,.7; put it up by one unit",
                "rule: separete logic from visual in your game objects",
                "create folder Scripts in Assets; create c# script",
                "call it Player, wait for code to compile",
                "select player logic object and atach the script, open script",
                "there are two unity input systems legacy and new one",
                "older is simpler, witch makes it usefull for prototyping",
                "newer is more capeable but more complex",
                "btw VS must have Unity packages installed for accesing framework",
                "write your code, to test, switch to game, press play, observe console for debug output",
                "dont forget to save code file or switch auto save",
                "Framework code assets:",
                "namespace UnityEngine",
                "MonoBehaviour",
                "private void Update() - once per frame",
                "Vector2",
                "Input.GetKey(KeyCode.W)",
                "inputVector (+-1,+-1), but also normalize it, becouse of diagonal",
                "Debug.Log(inputVector);",
                "inputVector = inputVector.normalized;",
                "var moveDir = new Vector3(inputVector.x, 0f, inputVector.y);",
                "{0} private float moveSpeed = 7f;",
                "transform.position += moveDir * moveSpeed * Time.deltaTime;",
                "Run game, check FPS on Stats view"
              ],
              "params": [
                {
                  "name": "[SerializeField]",
                  "desc": "this makes field editable in ui editor"
                }
              ]
            }
          ]
        },
        {
          "text": [
            "Character Visual, Rotation"
          ],
          "codes": [
            {
              "format": [
                "1:15-1:23",
                "drag Player Visual to Player object",
                "position 0,0,0",
                "Materials:",
                "has a shader and bunch of properties",
                "shader is a code that runs on a graphics card",
                "calculating how object is rendered",
                "there is a lot of default ones",
                "in URP use URP shaders, by default Lit",
                "Shader Graph - Visual tool for generating shaders without coding them",
                "Lit shader - Base Map has color field",
                "you can drag&drop material from assets on to the scene, or Mesh renderer Material field",
                "crate materials and apply them on shapes",
                "Rotate Visual:",
                "transform.rotation - uses quaterions, not intuitive",
                "transform.eulerAngles - uses 0-360 degrees",
                "transform.LookAt",
                "transform.forward = moveDir (method used)",
                "Smooth with Lerp",
                "function for interpolating",
                "var rotateSpeed = 10f;",
                "transform.forward = Vector3.Slerp(transform.forward, moveDir, Time.deltaTime * rotateSpeed)"
              ]
            }
          ]
        },
        {
          "text": [
            "Animations"
          ],
          "codes": [
            {
              "format": [
                ""
              ]
            },
            {
              "format": [
                ""
              ]
            },
            {
              "format": [
                ""
              ],
              "params": [
                {
                  "name": "",
                  "desc": ""
                },
                {
                  "name": "",
                  "desc": ""
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "summary": [
    "In progress."
  ]
}